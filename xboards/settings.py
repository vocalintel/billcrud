"""
Django settings for xboards project.

Generated by 'django-admin startproject' using Django 4.0.5.

For more information on this file, see
https://docs.djangoproject.com/en/4.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.0/ref/settings/
"""
import os
from pathlib import Path
# from google.oauth2 import service_account

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-@e*g-r*_-8dcu&l!^gtl(%h$fw&=5c(z6=u6javr(z1lj749=y'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []

# App password
# xehc skzy jrlb bgbe
# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'billboard','phonenumber_field','rest_framework',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'xboards.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
         'DIRS':[os.path.join(BASE_DIR,'template')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
            
            'libraries':{'staticfiles':'django.templatetags.static',}
        },
    },
]

WSGI_APPLICATION = 'xboards.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.0/ref/settings/#databases

# DATABASES = {
    # 'default' : {
        # 'ENGINE':'django.db.backends.mysql',
        # 'NAME':'billboard',
        # 'USER':'root',
        # 'PASSWORD':'Subomi1187?adufe',
        # 'HOST': '127.0.0.1',
        # 'PORT': '3306',
    # }
# }
# [START db_setup]


DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}
# if os.getenv('GAE_APPLICATION', None):
    # Running on production App Engine so connect to Google Cloud SQL using
    # the unix socket at /cloudsql/<your-cloudsql-connection string>
    # DATABASES = {
        # 'default' : {
            # 'ENGINE':'django.db.backends.mysql',
            # 'HOST': '/cloudsql/billboard-project-378117:europe-west1:sql-instance',
            # 'USER': 'shakirah',
            # 'PASSWORD':'Subomi1187?adufe',
            # 'NAME':'billboard',
        # }
    # }
# else:
    # DATABASES = {
        # 'default' : {
            # 'ENGINE':'django.db.backends.mysql',
            # 'HOST': '127.0.0.1',
            # 'PORT': '3306',
            # 'NAME':'billboard',
            # 'USER':'shakirah',
            # 'PASSWORD':'Subomi1187?adufe',
        # }
    # }
# [END db_setup]



# Password validation
# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.0/howto/static-files/

    

# ...
    
# GS_BUCKET_NAME = 'keesha-billboard'

# DEFAULT_FILE_STORAGE = 'storages.backends.gcloud.GoogleCloudStorage'
    
# STATIC_FILE_STORAGE = 'storages.backends.gcloud.GoogleCloudStorage'

# GS_CREDENTIALS = service_account.Credentials.from_service_account_file(
    # os.path.join(BASE_DIR, 'billboard-project-378117-08633f2daf6b.json')
# )

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'






STATIC_URL = '/static/'  # URL to access static files

# Where Django collects static files (used only in production)
# STATIC_ROOT = os.path.join(BASE_DIR, "staticfiles")  # Different from STATICFILES_DIRS

# Directories Django looks for additional static files (used in development)
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, "static"),  # This should be your actual static folder
]

# Media files (for user uploads)
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

LOGIN_REDIRECT_URL = '/gateway'
LOGOUT_REDIRECT_URL = '/billboard'


EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'
# EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
# EMAIL_HOST = 'smtp.mailtrap.io'
# EMAIL_PORT = '465'
# EMAIL_HOST_USER = '4ea2816070840a'
# EMAIL_HOST_PASSWORD = '72add812bc482b'
EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = 'vocalIntelliQuery@gmail.com'  # Your Gmail address used for sending emails
EMAIL_HOST_PASSWORD = 'plaitszswcnwtbvb' 


from django.contrib.messages import constants as messages

MESSAGE_TAGS = {
    messages.DEBUG: 'alert-info',
    messages.INFO: 'alert-info',
    messages.SUCCESS: 'alert-success',
    messages.WARNING: 'alert-warning',
    messages.ERROR: 'alert-danger',
}

